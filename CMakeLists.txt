cmake_minimum_required(VERSION 3.2)

PROJECT(Adon)

SET(CMAKE_PREFIX_PATH ${CMAKE_CURRENT_SOURCE_DIR})
SET(ADON_PROJECT_NAME ${PROJECT_NAME})
Find_Package(macros)

#Find OpenGL, different for each type of OS
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")

find_package(OpenGL)
message(STATUS "OPENGL_LIBRARIES=${OPENGL_LIBRARIES}")
message(STATUS "OPENGL_INCLUDE_DIR=${OPENGL_INCLUDE_DIR}")
message(STATUS "OPENGL_GLU_FOUND=${OPENGL_GLU_FOUND}")
message(STATUS "OPENGL_XMESA_FOUND=${OPENGL_XMESA_FOUND}")
message(STATUS "OPENGL_gl_LIBRARY=${OPENGL_gl_LIBRARY}")
message(STATUS "OPENGL_glu_LIBRARY=${OPENGL_glu_LIBRARY}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	find_package(OpenGL)
	message(STATUS "OPENGL_LIBRARIES=${OPENGL_LIBRARIES}")
	message(STATUS "OPENGL_INCLUDE_DIR=${OPENGL_INCLUDE_DIR}")
	message(STATUS "OPENGL_GLU_FOUND=${OPENGL_GLU_FOUND}")
	message(STATUS "OPENGL_XMESA_FOUND=${OPENGL_XMESA_FOUND}")
	message(STATUS "OPENGL_gl_LIBRARY=${OPENGL_gl_LIBRARY}")
	message(STATUS "OPENGL_glu_LIBRARY=${OPENGL_glu_LIBRARY}")

	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Android")
endif()

#DIRECTORY VARIABLES
SET(OS_PLATFORM ${CMAKE_SYSTEM_NAME})
SET(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(PROJECT_LIB_DIR ${ROOT_DIR}/output/lib)
SET(PROJECT_BIN_DIR ${ROOT_DIR}/output/bin)
SET(PROJECT_EXPORT_DIR ${ROOT_DIR}/output/exports)
SET(EXTS_INCLUDES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/output/includes)

#GLOBAL FILES
FILE(GLOB EXTS_INCLUDE_FILES
${CMAKE_CURRENT_SOURCE_DIR}/output/includes/glad/glad.h
${CMAKE_CURRENT_SOURCE_DIR}/output/includes/GLFW/glfw3.h
${CMAKE_CURRENT_SOURCE_DIR}/output/includes/GLFW/glfw3native.h
${CMAKE_CURRENT_SOURCE_DIR}/output/includes/tinyxml2/tinyxml2.h)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

ADD_SUBDIRECTORY(extensions)
ADD_SUBDIRECTORY(Adon)
